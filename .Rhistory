12:32
demo()
install.packages('gapminder')
library(gapminder)
data('gapminder')
# summary
summary(gapminder)
View(gapminder)
mean(gapminder$gdpPercap)
# assign to variables
gdp <- mean(gapminder$gdpPercap)
# attach the dataframe
attach(gapminder)
#
median(pop)
hist(lifeExp)
hist(log(pop))
# box plot
boxplot((lifeExp ~ continent))
# scatter plot
plot(lifeExp ~ log(gdpPercap))
# piping
library(dplyr)
gapminder %>%
select(country, lifeExp) %>%
filter(country == 'South Africa' | country == 'Ireland') %>%
group_by(country) %>%
summarise(average_life = mean(lifeExp))
df1 <- gapminder %>%
select(country, lifeExp) %>%
filter(country == 'South Africa' | country == 'Ireland')
t.test(data=df1, lifeExp ~ country)
# ggplot2
library(ggplot2)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_point
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_point()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, col=continent))+
geom_point()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, col=continent))+
geom_point(alpha=0.5)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)+
geom_smooth()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method=lm)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method=lm)+
facet_wrap(continent)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method=lm)+
facet_wrap(continent)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method=lm)+
facet_wrap(~continent)
# col=continent
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=year, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method=lm)+
facet_wrap(~continent)
# linear regression
lm(lifeExp ~ gdpPercap)
# linear regression
summary(lm(lifeExp ~ gdpPercap))
# linear regression
summary(lm(lifeExp ~ gdpPercap+pop))
# linear regression
summary(lm(lifeExp ~ gdpPercap+pop))
# linear regression
summary(lm(lifeExp ~ log(gdpPercap)+log(pop)))
?lm()
#  load the dplyr package
library(dplyr)
# Import and read in the MechaCar_mpg.csv file as a dataframe
mpg <- read.csv('MechaCar_mpg.csv')
setwd("~/Documents/Documents - bayileyegnâ€™s MacBook Pro/msuDAVis/tmp_challenges/15-statistics-with-r")
#  load the dplyr package
library(dplyr)
# Import and read in the MechaCar_mpg.csv file as a dataframe
mpg <- read.csv('MechaCar_mpg.csv')
View(mpg)
?lm()
# Perform linear regression using the lm() function
lm(mpg ~ mpg$vehicle_length, data = mpg)
# Perform linear regression using the lm() function
lm(mpg ~ data$vehicle_length, data = mpg)
#  load the dplyr package
library(dplyr)
# Import and read in the MechaCar_mpg.csv file as a dataframe
data <- read.csv('MechaCar_mpg.csv')
# Perform linear regression using the lm() function
lm(mpg ~ data$vehicle_length, data = mpg)
# Import and read in the MechaCar_mpg.csv file as a dataframe
mecha_car <- read.csv('MechaCar_mpg.csv')
# Perform linear regression using the lm() function
lm(mpg ~ data$vehicle_length, mecha_car)
atach(mecha_car)
attach(mecha_car)
View(mecha_car)
# Perform linear regression using the lm() function
lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, mecha_car)
mecha_car[1:5]
mecha_car[1,1:5]
colnames(mecha_car)
colnames(mecha_car[1:5])
# Perform linear regression using the lm() function
#lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, mecha_car)
lm(mpg ~ colnames(mecha_car[1:5]), mecha_car)
# Perform linear regression using the lm() function
#lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, mecha_car)
lm(mpg ~ vehicle_length+vehicle_weight, mecha_car)
# Perform linear regression using the lm() function
#lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, mecha_car)
summary(lm(mpg ~ vehicle_length+vehicle_weight, mecha_car))
library(ggplot)
library(ggplot2)
library(ggplot2)
mecha_car %>%
ggplot(aes(x=vehicle_weight, y=mpg))+
geom_point(alpha=0.3)+
geom_smooth(method=lm)
mecha_car %>%
ggplot(aes(x=vehicle_length, y=mpg))+
geom_point(alpha=0.3)+
geom_smooth(method=lm)
